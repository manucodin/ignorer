name: CI/CD Pipeline

on:
  pull_request:
    branches: [ develop, main ]
    types: [ opened, synchronize, reopened ]

env:
  GO_VERSION: '1.21'
  GO111MODULE: on

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Verify dependencies
      run: go mod verify
      
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: make test
      
    - name: Run tests with coverage
      run: make test-coverage
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Build for current platform
      run: make build
      
    - name: Build for all platforms
      run: make build-all
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ignorer-binaries
        path: bin/
        retention-days: 30

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
        
    - name: Run go fmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted properly:"
          gofmt -s -l .
          exit 1
        fi
        
    - name: Run go vet
      run: go vet ./...